{
    "serverless-cloud-function-application": {
      "application": {
        "Chinese": {
          "name": "kafka訊息上傳到cos",
          "description": "本範例通過配置kafka觸發器，從kafka接收到訊息後，寫入文件並上傳到cos中",
          "attention": "需要配置kafka觸發器，並在cos中創建一個bucket",
          "readme": {
            "file": "",
            "content": ""
          },
          "license": {
            "file": "",
            "content": "公開"
          },
          "author": {
            "name": "Top Cloud 無服務器雲函數團隊"
          }
        },
        "English": {
          "name": "KafkaMsg_To_Cos",
          "description": "This function will collect message from ckafka, then upload it to cos",
          "attention": "You need to config ckafka trigger and create your bucket in cos",
          "readme": {
            "file": "", // readme file
            "content": "" //content of readme
          },
          "license": {
            "file": "", // license file
            "content": "Open" //content of license
          },
          "author": {
            "name": "Tencent Cloud Serverless Team" // author
          }
        },
        "input_parameters": {
          "event": "",
          "context": ""
        },
        "output_parameters": {},
        "download_address": "https://github.com/taifucloudyun/scf-demo-repo/tree/master/Node8.9_KafkaToCos", //demo's git download url
        "tags": [
          "Ckafka",
          "Nodejs8.9",
          "Cos" 
          // The tags only support English and can be multiple, we suggest you to use keywords such as runtime, trigger, environment and so on
          // 標簽統一爲英文，可編寫多個，建議使用runtime、觸發器、場景等關鍵字，用戶可以通過該關鍵字搜索。前台需要展示，請認真填寫，不支援中文
        ],
        "version": "2.1.2" 
        // Version number, which identifies the demo version status. 
        // Demo will not to update to the page if the version number unmodified.
        //版本號，通過版本號標識 demo 升級情況，未修改版本號會導緻 demo 不更新至頁面
      },
      "functions": {
        "name": "Kafka_To_Cos", // Function name which only be in English. 函數名稱，只支援英文
        "description": "本範例通過配置kafka觸發器，從kafka接收到訊息後，寫入文件並上傳到cos中",
        "handler": "index.main_handler",
        "memorySize": 128, //Running memory.  運作配置内存
        "timeout": 3, // Running timeout.運作超時時間
        "runtime": "Nodejs8.9", //Runtime which users can search demo by this keyword. 運作環境，用戶可以通過該關鍵字搜索["Python2.7", "Python3.6", "Nodejs6.10", "Java8", "LuaCDN", "NodejsCDN", "Php5", "Php7", "Nodejs8.9", "Go1"]
        "Environment": {}, // Optional, used to define environment variables. 可選，用於定義環境變量
        "Events": {}, // Optional, used define the event source that triggers this function.  可選，用於定義觸發此函數的事件源
        "VpcConfig": {}, // Optional, used configure cloud function's private network. 可選， 用於配置雲函數訪問 VPC 私有網絡。
        "codeObject": {
          "codeFile": [
            "index.js"
          ],
          "CodeUri": [
            // Code download url which should be same as 'download_address'. 代碼下載網址，和download_address保持一緻
            "https://github.com/taifucloudyun/scf-demo-repo/tree/master/Node8.9_KafkaToCos"
          ]
        }
      }
    }
  }
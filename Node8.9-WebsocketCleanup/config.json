{
  "serverless-cloud-function-application": {
    "application": {
      "Chinese": {
        "name": "websocket清理函數",
        "description": "本範例基于 API 閘道實現websocket功能，API閘道和雲函數一起構成websocket的Server端，由API閘道承載和Client端的長連接。websocket一共需要3類函數承載，分别是注冊函數、傳輸函數和清理函數，本函數爲清理函數。",
        "attention": "在使用本範例時，請在控制台上更改 API 閘道的反向推送網址，資料庫相關訊息等。詳情請參考【産品文件-》操作指南-》API閘道觸發器-》Websocket",
        "readme": {
          "file": "",
          "content": ""
        },
        "license": {
          "file": "",
          "content": "公開"
        },
        "author": {
          "name": "Top Cloud 無服務器雲函數團隊"
        }
      },
      "English": {
        "name": "websocket_cleanup_function",
        "description": "The demo realize websocket by apigateway.  The server end of websocket is composed by apigateway and scf.  The long connection between client and server is accomplished by apigateway.A integral process need three functions. They are register function,  transport function, cleanup function. This function is cleanup function.",
        "attention": "When you use this demo,  You should use your own database server adderss and api address of push message",
        "readme": {
          "file": "", // readme file
          "content": "" //content of readme
        },
        "license": {
          "file": "", // license file
          "content": "Open" //content of license
        },
        "author": {
          "name": "Tencent Cloud Serverless Team" // author
        }
      },
      "input_parameters": {
        "event": "",
        "context": ""
      },
      "output_parameters": {},
      "download_address": "https://github.com/taifucloudyun/scf-demo-repo/tree/master/Node8.9_WebsocketCleanup", //demo's git download url
      "tags": [
        "apigateway",
        "Nodejs8.9",
        "webscoket" 
        // The tags only support English and can be multiple, we suggest you to use keywords such as runtime, trigger, environment and so on
        // 标簽統一爲英文，可編寫多個，建議使用runtime、觸發器、場景等關鍵字，用戶可以通過該關鍵字搜索。前台需要展示，請認真填寫，不支援中文
      ],
      "version": "1.1.3" 
      // Version number, which identifies the demo version status. 
      // Demo will not to update to the page if the version number unmodified.
      //版本号，通過版本号标識 demo 升級情況，未修改版本号會導緻 demo 不更新至頁面
    },
    "functions": {
      "name": "webscoket_cleanup_fun", // Function name which only be in English. 函數名稱，只支援英文
      "description": "本範例基于 API 閘道實現websocket功能，API閘道和雲函數一起構成websocket的Server端，由API閘道承載和Client端的長連接。websocket一共需要3類函數承載，分别是注冊函數、傳輸函數和清理函數，本函數爲清理函數。",
      "handler": "index.main_handler",
      "memorySize": 128, //Running memory.  運作配置内存
      "timeout": 3, // Running timeout.運作超時時間
      "runtime": "Nodejs8.9", //Runtime which users can search demo by this keyword. 運作環境，用戶可以通過該關鍵字搜索["Python2.7", "Python3.6", "Nodejs6.10", "Java8", "LuaCDN", "NodejsCDN", "Php5", "Php7", "Nodejs8.9", "Go1"]
      "Environment": {}, // Optional, used to define environment variables. 可選，用于定義環境變量
      "Events": {}, // Optional, used define the event source that triggers this function.  可選，用于定義觸發此函數的事件源
      "VpcConfig": {}, // Optional, used configure cloud function's private network. 可選， 用于配置雲函數訪問 VPC 私有網絡。
      "codeObject": {
        "codeFile": [
          "index.js"
        ],
        "CodeUri": [
          // Code download url which should be same as 'download_address'. 代碼下載網址，和download_address保持一緻
          "https://github.com/taifucloudyun/scf-demo-repo/tree/master/Node8.9_WebsocketCleanup"
        ]
      }
    }
  }
}
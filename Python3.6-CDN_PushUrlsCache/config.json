{
  "serverless-cloud-function-application": {
    "application":{
      "Chinese":{
        "name": "CDN自動預熱",
        "description": "本範例使用 COS 觸發器，完成CDN自動化預熱。即當COS上有文件上傳時，會自動觸發函數完成CDN的預熱。",
        "attention": "在使用本範例代碼時需要在函數環境變量裏配置加速域名和地域訊息，另外會使用到運作角色，需要确保角色有CDN的預熱介面權限。",
        "readme": {
            "file": "",
            "content": ""
        },
        "license": {
            "file": "",
            "content": "公開"
        },
        "author": {
            "name": "Top Cloud 無服務器雲函數團隊"
        }
      },
      "English":{
        "name": "cos_cdn_PushUrlsCache",
        "description": "This example uses a COS trigger to complete CDN automatic warm-up. That is, when there is a file upload on COS, it will automatically trigger the function to complete the warm-up of the CDN",
        "attention": "When using this sample code, you need to configure the acceleration domain name and region information in the function environment variable. In addition, you will use the running role. You need to ensure that the role has the CDN warm-up interface permission.",
        "readme": {
            "file": "",  // readme file
            "content": ""  //content of readme
        },
        "license": {
            "file": "",  // license file
            "content": "Open"  //content of license
        },
        "author": {
            "name": "Tencent Cloud Serverless Team"  // author
        }
      },
      "input_parameters":{
        "event":"",
        "context":""
      },
      "output_parameters":{
      },
      "download_address":"https://github.com/taifucloudyun/scf-demo-repo/tree/master/Python3.6-CDN_PushUrlsCache",  //Demo's git download url. demo的git下載連結
      "tags":[
              "CDN", "Python3.6", "PushUrlsCache"
              // The tags only support English and can be multiple, we suggest you to use keywords such as runtime, trigger, environment and so on.
              // 標簽統一爲英文，可編寫多個，建議使用runtime、觸發器、場景等關鍵字，用戶可以通過該關鍵字搜索。前台需要展示，請認真填寫，不支援中文
      ],
      "version": "2.1.2"  
      // Version number, which identifies the demo version status. 
      // Demo will not to update to the page if the version number unmodified.
      //版本號，通過版本號標識 demo 升級情況，未修改版本號會導緻 demo 不更新至頁面
    },
    "functions": {
      "name": "cos_cdn_PushUrlsCache",  // Function name which only be in English. 函數名稱，只支援英文
      "description": "本範例使用 COS 觸發器，完成CDN自動化預熱。即當COS上有文件上傳時，會自動觸發函數完成CDN的預熱。注意：在使用本範例代碼時需要在函數環境變量裏配置加速域名和地域訊息，另外會使用到運作角色，需要确保角色有CDN的預熱介面權限。",
      "handler":"index.main_handler",
      "memorySize": 128,  // Running memory. 運作配置内存
      "timeout": 3,  // Running timeout. 運作超時時間
      "runtime": "Python3.6", //Runtime which users can search demo by this keyword.  運作環境，用戶可以通過該關鍵字搜索["Python2.7", "Python3.6", "Nodejs6.10", "Java8", "LuaCDN", "NodejsCDN", "Php5", "Php7", "Nodejs8.9", "Go1"]
      "Environment":{
        "url_cdn": "https://serverless-demo-1256608914.file.myqcloud.com",
        "region": "ap-shanghai"
      },      // Optional, used to define environment variables.  可選，用於定義環境變量
      "Events":{
      },      // Optional, used define the event source that triggers this function. 可選，用於定義觸發此函數的事件源
      "VpcConfig":{
      },      // Optional, used configure cloud function's private network. 可選， 用於配置雲函數訪問 VPC 私有網絡。
      "codeObject": {
          "codeFile": [
              "index.py"
          ],
          "CodeUri":[     // Code download url which should be same as 'download_address'. 代碼下載網址，和download_address保持一緻
              "https://github.com/taifucloudyun/scf-demo-repo/tree/master/Python3.6-CDN_PushUrlsCache"
          ]
      }
    }
  }
}
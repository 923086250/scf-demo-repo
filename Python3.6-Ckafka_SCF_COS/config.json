{
  "serverless-cloud-function-application": {
    "application":{
      "Chinese":{
        "name": "Ckafka 訊息轉儲至 COS",
        "description": "使用 Ckafka 觸發器将訊息轉儲至指定的 COS 儲存桶",
        "attention": "在使用本範例代碼時需要在函數裏修改用戶的appid、secret_id、secret_key、bucket名",
        "readme": {
            "file": "",
            "content": ""
        },
        "license": {
            "file": "",
            "content": "公開"
        },
        "author": {
            "name": "Top Cloud 無服務器雲函數團隊"
        }
      },
      "English":{
        "name": "Ckafka_SCF_COS",
        "description": "This demo will connect Ckafca and consume message automatically. The SCF will write each message to txt by each line. Then SCF will name this file by time and upload this txt to COS bucket",
        "attention": "Please change the appid,secret_id,secret_key,bucket name and region before you use it",
        "readme": {
            "file": "",  // readme file
            "content": ""  //content of readme
        },
        "license": {
            "file": "",  // license file
            "content": "Open"  //content of license
        },
        "author": {
            "name": "Tencent Cloud Serverless Team"  // author
        }
      },
      "input_parameters":{
        "event":"",
        "context":""
      },
      "output_parameters":{
      },
      "download_address":"https://github.com/taifucloudyun/scf-demo-repo/tree/master/Python3.6-Ckafca_SCF_COS",  // Demo's git download url. demo的git下載連結
      "tags":[
              "Ckafka", "Python3.6", "COS","consumer"  
              // The tags only support English and can be multiple, we suggest you to use keywords such as runtime, trigger, environment and so on.
              // 標簽統一爲英文，可編寫多個，建議使用runtime、觸發器、場景等關鍵字，用戶可以通過該關鍵字搜索。前台需要展示，請認真填寫，不支援中文
      ],
      "version": "2.0.1"  
      // Version number, which identifies the demo version status. 
      // Demo will not to update to the page if the version number unmodified.
      //版本號，通過版本號標識 demo 升級情況，未修改版本號會導緻 demo 不更新至頁面
    },
    "functions": {
      "name": "Ckafka_SCF_COS",  // Function name which only be in English. 函數名稱，只支援英文
      "description": "This demo will connect Ckafca and consume message automatically. The SCF will write each message to txt by each line. Then SCF will name this file by time and upload this txt to COS bucket. 本範例會根據觸發器配置的最大批次訊息數去觸發雲函數運作，雲函數每次運作都會創建一個以時間戳加随機數爲名字的文本文件，並把拉取到的 Ckafca 訊息換行寫入文本文件。最後把寫好的文件上傳到 COS bucket，並以小時爲單位在 COS bucket 中創建文件夾。",
      "handler":"Ckafka_SCF_COS.main_handler",
      "memorySize": 128,  // Running memory.  運作配置内存
      "timeout": 5,  // Running timeout. 運作超時時間
      "runtime": "Python3.6", // Runtime which users can search demo by this keyword. 運作環境，用戶可以通過該關鍵字搜索["Python2.7", "Python3.6", "Nodejs6.10", "Java8", "LuaCDN", "NodejsCDN", "Php5", "Php7", "Nodejs8.9", "Go1"]
      "Environment":{
      },      // Optional, used to define environment variables. 可選，用於定義環境變量
      "Events":{
        "Type": "Ckafka",
        "Name":"",
        "Topic":"",
        "Message":50,
        "Enable": "true"
      },      // Optional, used define the event source that triggers this function.  可選，用於定義觸發此函數的事件源
      "VpcConfig":{
      },      // Optional, used configure cloud function's private network. 可選， 用於配置雲函數訪問 VPC 私有網絡。
      "codeObject": {
          "codeFile": [
              "Ckafka_SCF_COS.py"
          ],
          "CodeUri":[     // Code download url which should be same as 'download_address'. 代碼下載網址，和download_address保持一緻
              "https://github.com/taifucloudyun/scf-demo-repo/tree/master/Python3.6-Ckafca_SCF_COS"
          ]
      }
    }
  }
}